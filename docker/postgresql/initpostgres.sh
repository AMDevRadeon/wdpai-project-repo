#!/bin/sh
set -e

psql -v ON_ERROR_STOP=1 --username="$POSTGRES_USER" --dbname="$POSTGRES_DB" <<-EOSQL
    CREATE USER rwhead WITH ENCRYPTED PASSWORD 's1em1e_ln1ane' NOCREATEDB;

    CREATE TABLE user_data (
        id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        email varchar(256) NOT NULL,
        name varchar(128) NOT NULL,
        passhash varchar(182) NOT NULL
    );

    CREATE TABLE user_admin (
        id integer PRIMARY KEY REFERENCES user_data(id) NOT NULL,
        is_admin boolean NOT NULL DEFAULT false
    );

    CREATE TABLE global_chat (
        id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        sent_date timestamp(3) with time zones DEFAULT now() NOT NULL,
        user_id integer REFERENCES user_data(id) NOT NULL,
        message text DEFAULT 'Message was deleted'
    );

    CREATE TABLE chat_connections (
        name varchar DEFAULT 'Private chat', 
        id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        is_deleted boolean NOT NULL DEFAULT false
    );

    CREATE TABLE private_chat_connection (
        conversation_id integer REFERENCES chat_connections(id) NOT NULL,
        user_id integer REFERENCES user_data(id) NOT NULL,
        UNIQUE (conversation_id, user_id)
    );

    CREATE TABLE private_chat (
        id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        conversation_id integer NOT NULL REFERENCES chat_connections(id) NOT NULL,
        sent_date timestamp(3) with time zone DEFAULT now() NOT NULL,
        user_id integer REFERENCES user_data(id) NOT NULL,
        message text DEFAULT 'Message was deleted'
    );

    CREATE VIEW user_data_name_view AS
    SELECT user_data.name FROM user_admin
    LEFT OUTER JOIN user_data ON user_admin.id = user_data.id
    WHERE user_admin.is_admin = false;

    CREATE VIEW admin_data_name_view AS
    SELECT user_data.name FROM user_admin
    LEFT OUTER JOIN user_data ON user_admin.id = user_data.id
    WHERE user_admin.is_admin = true;

    CREATE VIEW show_active_private_chat_members AS
    SELECT chat_connections.name, COUNT(user_data.name), string_agg(user_data.name, ', ') FROM chat_connections
    LEFT OUTER JOIN private_chat_connection ON chat_connections.id = private_chat_connection.conversation_id
    LEFT OUTER JOIN user_data ON private_chat_connection.user_id = user_data.id
    WHERE chat_connections.is_deleted = false
    GROUP BY chat_connections.id;

    CREATE VIEW show_private_chats_of_users AS
    SELECT MAX(user_data.name) AS user_name, user_id, string_agg(chat_connections.name, ', ') AS chatrooms FROM private_chat_connection
    JOIN chat_connections ON private_chat_connection.conversation_id = chat_connections.id
    JOIN user_data ON user_id = user_data.id
    WHERE chat_connections.is_deleted = false
    GROUP BY user_id;

    CREATE FUNCTION create_normal_user()
        RETURNS TRIGGER
    AS \$$
    BEGIN
        INSERT INTO user_admin(id) VALUES (new.id);
        RETURN new;
    END;
    \$$ LANGUAGE plpgsql;

    CREATE TRIGGER create_normal_user
    AFTER INSERT ON user_data
    FOR EACH ROW
    EXECUTE PROCEDURE create_normal_user();

    GRANT USAGE ON SCHEMA public TO rwhead;
    GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO rwhead;
    GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO rwhead;
    GRANT EXECUTE ON ALL PROCEDURES IN SCHEMA public TO rwhead;
    GRANT EXECUTE ON ALL ROUTINES IN SCHEMA public TO rwhead;

EOSQL